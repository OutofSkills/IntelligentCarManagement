@page "/cars"
@using IntelligentCarManagement.DataModels;
@using IntelligentCarManagement.UI.Services;

<!--HTML-->
<h1>Cars</h1>

All existing cars. <br /><br />

@if (_cars == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">Brand</th>
                    <th scope="col">Model</th>
                    <th scope="col">Fuel Type</th>
                    <th scope="col">Available</th>
                    <th scope="col">Driver</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var car in _cars)
                {
                    <tr>
                        <th scope="row">@car.Id</th>
                        <td>@car.Brand</td>
                        <td>@car.Model</td>
                        <td>@car.FuelType</td>
                        @if (car.IsAvailable)
                        {
                            <td>Yes</td>
                        }
                        else
                        {
                            <td>No</td>
                        }
                        <td>
                            <a href="driver">@car.Driver.FirstName @car.Driver.LastName</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
<!--end HTML-->
<!--C#-->
@inject ICarService CarService
@code {
    private IEnumerable<Car> _cars = null;

    protected override async Task OnInitializedAsync()
    {
        _cars = await CarService.GetCars();
    }
}

<!--end C#-->