@page "/login"

@using IntelligentCarManagement.Models
@using IntelligentCarManagement.Authentication
@using Services;

@inject IAuthenticationService AuthService
@inject NavigationManager NavManager

<h3>Login</h3>

<hr class="border-light m-0">
<br />
<br />


<div class="container-fluid">
    <div class="row d-flex justify-content-center align-items-center">
        <div class="col-xl-4">
            <div class="card borderless">
                <div class="card-body">

                    @if (showAuthenticationError)
                    {
                        <div class="alert alert-danger" role="alert">
                            <p>@authenticationErrorText</p>
                        </div>
                    }

                    <EditForm Model="@user" OnValidSubmit="ExecuteLogin">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="form-group row mb-2">
                            <div class="col-md-12">
                                <label for="email" class="form-label">Email</label>
                                <InputText id="email" class="form-control" @bind-Value="user.Email"></InputText>
                                <ValidationMessage For="@(() => user.Email)" />
                            </div>
                        </div>

                        <div class="form-group row mb-3">
                            <div class="col-md-12">
                                <label for="password" class="form-label">Password</label>
                                <InputText id="password" class="form-control" @bind-Value="user.Password"></InputText>
                                <ValidationMessage For="@(() => user.Password)" />
                            </div>
                        </div>

                        <div class="form-group row mb-3">
                            <div class="col-md-6 text-start">
                                <button type="submit" class="btn btn-primary">
                                    @if (currentState == taskStates.Started.ToString())
                                    {
                                        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                                    }
                                    Log in
                                </button>
                            </div>
                            <div class="col-md-6 text-right">
                                <a class="small" href="#">Forgot password?</a>
                            </div>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel user = new LoginModel();
    private enum taskStates { Started, Ended};
    private string currentState = "";
    private bool showAuthenticationError = false;
    private string authenticationErrorText = "";

    private async Task ExecuteLogin()
    {

        currentState = taskStates.Started.ToString();
        showAuthenticationError = false;

        var result = await AuthService.Login(user);

        currentState = taskStates.Ended.ToString();

        if (result is not null)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            authenticationErrorText = "There was an error when trying to log in. ";
            showAuthenticationError = true;
        }

    }
}
