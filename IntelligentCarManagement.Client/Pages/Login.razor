@page "/login"

@using Services;
@using System.ComponentModel.DataAnnotations;

@inject IAuthenticationService AuthService
@inject NavigationManager NavManager

<MudContainer>
    <div class="row justify-content-center">
        <div style="max-width: 400px;">
            <EditForm Model="@model" OnValidSubmit="ExecuteLogin">
                <MudCard>
                    <MudCardContent>
                        <MudTextField Label="Email" Class="mt-3"
                                      @bind-Value="model.Email" For="@(() => model.Email)" />
                        <MudTextField Label="Password" Class="mt-3"
                                      @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                    </MudCardContent>
                    <MudCardActions>
                        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">
                            @if (currentState == taskStates.Started.ToString())
                            {
                                <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                            }

                            Login
                        </MudButton>
                    </MudCardActions>
                </MudCard>
                <br />

                <MudExpansionPanels>
                    <MudExpansionPanel Text="Login Validation" @bind-IsExpanded="expand">
                        @if (authError)
                        {
                            <MudText Color="@Color.Error">
                                @authErrorText
                            </MudText>
                        }
                        else
                        {
                            <MudText Color="@Color.Dark">
                                No errors.
                            </MudText>
                        }
                    </MudExpansionPanel>
                </MudExpansionPanels>
            </EditForm>
        </div>
    </div>
</MudContainer>


@code {
    LoginModel model = new();

    private enum taskStates { Started, Ended };
    private string currentState = "";
    private bool expand = false;
    private bool authError = false;
    private string authErrorText = "";

    private async Task ExecuteLogin()
    {

        currentState = taskStates.Started.ToString();
        authError = false;

        var result = await AuthService.Login(model);

        currentState = taskStates.Ended.ToString();
        expand = true;

        if (result is not null)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            authErrorText = "There was an error when trying to log in. ";
            authError = true;
        }

    }
}