@inherits LayoutComponentBase

@using Services;
@using System.Text.Json;

<MudThemeProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Color="Color.Primary" Fixed="false">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        Intelligent Car Management
        <MudSpacer />

        <AuthorizeView>
            <Authorized>
                <Notifications />

                    <MudMenu Direction="Direction.Right" OffsetY="true" OffsetX="true" Dense="true">
                        <ActivatorContent>
                            @if (user.Avatar is null)
                            {
                                <MudAvatar Class="text-light" Style="border-color:white" Variant="Variant.Outlined" Size="Size.Small">
                                    @(context.User.FindFirst(ClaimTypes.Name).Value.ToUpper().Substring(0, 1))
                                </MudAvatar>
                            }
                            else
                            {
                                <MudAvatar Image=@user.Avatar />
                            }
                        </ActivatorContent>
                        <ChildContent>
                            @if (user.Avatar is null)
                            {
                                <CardPerson Class="mt-n2" Name=@(context.User.FindFirst(ClaimTypes.Name).Value)
                                            Role=@(context.User.FindFirst(ClaimTypes.Role).Value)
                                            Image=@(context.User.FindFirst(ClaimTypes.Name).Value.ToUpper().Substring(0, 1)) />
                            }
                            else
                            {
                                <CardPerson Class="mt-n2" Name=@(context.User.FindFirst(ClaimTypes.Name).Value)
                                            Role=@(context.User.FindFirst(ClaimTypes.Role).Value)
                                            Image=@user.Avatar />
                            }

                            <MudDivider Class="mb-2" />
                            <MudListItem Text="Account" Icon="@Icons.Material.Outlined.Person" Href="/settings" />
                            <MudListItem Text="Logout" Icon="@Icons.Material.Outlined.Login" Href="/logout" />
                        </ChildContent>
                    </MudMenu>
            </Authorized>
            <NotAuthorized>
                <MudIconButton Color="Color.Inherit" Title="Register" Link="/register">
                    <i class="fas fa-user-plus" title="Register" aria-hidden="true"></i>
                </MudIconButton>
                <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" Title="Login" Link="/login" />
            </NotAuthorized>
        </AuthorizeView>

    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu />
    </MudDrawer>

    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>


@code{
    User user = new();

    [Inject] public IUsersService UsersService { get; set; }

    [Inject] public AuthenticationStateProvider AuthStateProvider { get; set; }

    bool _drawerOpen = false;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    protected override async Task OnInitializedAsync()
    {
        var id = await GetLoggedUserId();
        var httpResponse = await UsersService.GetUserAsync(id);

        var responseString = await httpResponse.Content.ReadAsStringAsync();

        user = JsonSerializer.Deserialize<User>(responseString, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
    }

    private async Task<int> GetLoggedUserId()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var userId = authState.User.FindFirst(ClaimTypes.NameIdentifier).Value;

        return int.Parse(userId);
    }
}